#!/bin/bash
set -eu

VERSION=${VERSION:-1.19.16}

# check https://github.com/kubernetes/kubernetes/releases
mkdir -p tmp
for x in kube-{apiserver,controller-manager,proxy,scheduler} kubectl kubelet; do
  echo ">> updating k8s core component '$x' to v${VERSION}..."
  if [[ ! -f tmp/$x-v${VERSION}.gz ]]; then
    if [[ ! -f tmp/$x-v${VERSION} ]]; then
      curl -fSL --url "https://storage.googleapis.com/kubernetes-release/release/v${VERSION}/bin/linux/amd64/${x}" \
          -o tmp/$x-v${VERSION}
      if ! file tmp/$x-v${VERSION} | grep -iq 'elf 64-bit lsb executable'; then
        echo >&2 "failed to download k8s core component '$x' v${VERSION}:"
        file tmp/$x-v${VERSION}
        exit 1
      fi
    fi
    gzip -9 tmp/$x-v${VERSION}
  fi
  bosh add-blob tmp/$x-v${VERSION}.gz k8s/$x-v${VERSION}.gz
done

# echo ">> rebuilding dockerized k8s components..."
# make dockers VERSION=$VERSION

# check https://github.com/containerd/containerd/releases
v=1.3.10
echo ">> updating containerd to $v..."
what=containerd-${v}-linux-amd64.tar.gz
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://github.com/containerd/containerd/releases/download/v${v}/${what}
tar -tzf tmp/${what}
bosh add-blob tmp/${what} containerd/${what}

# check https://github.com/containernetworking/plugins/releases
# careful: from 1.0.1 onwards flannel is in its own repo https://github.com/flannel-io/cni-plugin/releases
v=0.9.1
echo ">> updating cni-plugins to $v..."
what=cni-plugins-linux-amd64-v${v}.tgz
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://github.com/containernetworking/plugins/releases/download/v${v}/${what}
tar -tzf tmp/${what}
bosh add-blob tmp/${what} containerd/${what}

# check https://github.com/kubernetes-sigs/cri-tools/releases
v=1.22.0
echo ">> updating crictl to $v..."
what=crictl-v${v}-linux-amd64.tar.gz
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://github.com/kubernetes-sigs/cri-tools/releases/download/v${v}/${what}
tar -tzf tmp/${what}
bosh add-blob tmp/${what} containerd/${what}

# check https://github.com/opencontainers/runc/releases
v=1.0.2
what=runc-v${v}
echo ">> updating runc to $v..."
if [[ ! -f tmp/${what}.gz ]]; then
  [[ ! -f tmp/${what} ]] && \
    curl -fSLo tmp/${what} https://github.com/opencontainers/runc/releases/download/v${v}/runc.amd64
  gzip -9 tmp/${what}
fi
bosh add-blob tmp/${what}.gz runtime-runc/${what}.gz

# v=latest
# what=runsc
# echo ">> updating runsc to $v..."
# curl -Lo tmp/${what} https://storage.googleapis.com/kubernetes-the-hard-way/runsc-50c283b9f56bb7200938d9e207355f05f79f0d17
# bosh add-blob tmp/${what} runtime-runc/${what}

# check https://github.com/etcd-io/etcd/releases
v=3.4.17
echo ">> updating etcd to $v..."
what=etcd-v${v}-linux-amd64.tar.gz
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://github.com/etcd-io/etcd/releases/download/v${v}/${what}
tar -tzf tmp/${what}
bosh add-blob tmp/${what} etcd/${what}

v=latest
echo ">> updating cfssl to $v..."
what=cfssl_linux-amd64
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://pkg.cfssl.org/R1.2/${what}
bosh add-blob tmp/${what} cfssl/${what}

v=latest
echo ">> updating cfssljson to $v..."
what=cfssljson_linux-amd64
[[ ! -f tmp/${what} ]] && \
curl -fSLo tmp/${what} https://pkg.cfssl.org/R1.2/${what}
bosh add-blob tmp/${what} cfssl/${what}
