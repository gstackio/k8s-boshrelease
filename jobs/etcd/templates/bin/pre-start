#!/bin/bash
set -eu
exec 2>&1

JOB=etcd
BIN=pre-start
JOB_DIR=/var/vcap/jobs/$JOB
CERTS_DIR=/var/vcap/data/k8s/certs
TMP_DIR=/var/vcap/data/k8s/tmp/$JOB

# put cfssl in our path
export PATH=$PATH:/var/vcap/packages/cfssl/bin

echo "[$(date)] $BIN/$$: regenerating certificates..."
rm -rf $TMP_DIR
mkdir -p $CERTS_DIR $TMP_DIR
pushd $TMP_DIR >/dev/null 2>&1

echo "[$(date)] $BIN/$$: configuring ca parameters"
cat > ca.json <<EOF
{
  "signing": {
    "default": {
      "expiry": "8760h"
    },
    "profiles": {
      "kubernetes": {
        "usages": ["signing", "key encipherment", "server auth", "client auth"],
        "expiry": "8760h"
      }
    }
  }
}
EOF
cat ca.json
echo

gencert() {
  cn=$1
  alts=$2
  dest=$3

  cat > cert.json <<EOF
{
  "CN": "$cn",
  "key": {
    "algo": "rsa",
    "size": 2048
  }
}
EOF
  cfssl gencert \
    -ca=$JOB_DIR/tls/ca/cert.pem \
    -ca-key=$JOB_DIR/tls/ca/key.pem \
    -config=ca.json \
    -hostname=$alts \
    -profile=kubernetes \
    cert.json | \
      cfssljson -bare out
  mkdir -p $CERTS_DIR/$dest
  mv out.pem     $CERTS_DIR/$dest/cert.pem
  mv out-key.pem $CERTS_DIR/$dest/key.pem
  echo ">> $CERTS_DIR/$dest/cert.pem"
  openssl x509 -text -in $CERTS_DIR/$dest/cert.pem
  echo
}

echo "[$(date)] $BIN/$$: issuing the etcd server certificate for etcd"
gencert etcd \
        127.0.0.1,<%= spec.ip %>,<%= spec.address %> \
        etcd

popd >/dev/null 2>&1

echo "[$(date)] $BIN/$$: removing temporary directory $TMP_DIR..."
rm -rf $TMP_DIR

echo "[$(date)] $BIN/$$: complete."
