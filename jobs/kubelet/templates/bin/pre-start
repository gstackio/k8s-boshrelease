#!/bin/bash
set -eu
exec 2>&1

JOB=kubelet
BIN=pre-start
JOB_DIR=/var/vcap/jobs/$JOB
CERTS_DIR=/var/vcap/data/k8s/certs
DAT_DIR=/var/vcap/data/k8s
TMP_DIR=$DAT_DIR/tmp/$JOB
NODENAME=$($JOB_DIR/bin/nodename)

# put cfssl in our path
export PATH=$PATH:/var/vcap/packages/cfssl/bin

# put kube-* in our path
export PATH=$PATH:/var/vcap/packages/k8s/bin

echo "[$(date)] $BIN/$$: regenerating certificates..."
rm -rf $TMP_DIR
mkdir -p $CERTS_DIR $DAT_DIR $TMP_DIR
pushd $TMP_DIR >/dev/null 2>&1

echo "[$(date)] $BIN/$$: configuring ca parameters"
cat > ca.json <<EOF
{
  "signing": {
    "default": {
      "expiry": "8760h"
    },
    "profiles": {
      "kubernetes": {
        "usages": ["signing", "key encipherment", "server auth", "client auth"],
        "expiry": "8760h"
      }
    }
  }
}
EOF
cat ca.json
echo

gencert() {
  cn=$1
  o=$2
  alts=$3
  dest=$4

  cat > cert.json <<EOF
{
  "CN": "$cn",
  "names": [{"O": "$o"}],
  "key": {
    "algo": "rsa",
    "size": 2048
  }
}
EOF
  cfssl gencert \
    -ca=$JOB_DIR/tls/ca/cert.pem \
    -ca-key=$JOB_DIR/tls/ca/key.pem \
    -config=ca.json \
    -hostname=$alts \
    -profile=kubernetes \
    cert.json | \
      cfssljson -bare out
  mkdir -p $CERTS_DIR/$dest
  mv out.pem     $CERTS_DIR/$dest/cert.pem
  mv out-key.pem $CERTS_DIR/$dest/key.pem
  echo ">> $CERTS_DIR/$dest/cert.pem"
  openssl x509 -text -in $CERTS_DIR/$dest/cert.pem
  echo
}

ID="system:node:$NODENAME"
echo "[$(date)] $BIN/$$: issuing the Kubelet certificate for [$ID]"
gencert "$ID" \
        system:nodes \
        127.0.0.1,<%= spec.ip %>,$NODENAME \
        kubelet

echo "[$(date)] $BIN/$$: issuing the Automaton Client certificate"
gencert automaton \
        system:masters \
        system:masters \
        automaton

echo "[$(date)] $BIN/$$: issuing the Proxy certificate"
gencert system:kube-proxy \
        system:node-proxier \
        system:kube-proxy \
        proxy

popd >/dev/null 2>&1

echo "[$(date)] $BIN/$$: refreshing our proxy kubeconfig..."
kubectl config set-cluster <%= link('api').p('cluster.name') %> \
    --certificate-authority=$JOB_DIR/tls/ca/cert.pem \
    --embed-certs=true \
    --server=https://<%= p('apiserver') %> \
    --kubeconfig=$DAT_DIR/proxy.kubeconfig
kubectl config set-credentials system:kube-proxy \
    --client-certificate=$CERTS_DIR/proxy/cert.pem \
    --client-key=$CERTS_DIR/proxy/key.pem \
    --embed-certs=true \
    --kubeconfig=$DAT_DIR/proxy.kubeconfig
kubectl config set-context default \
    --cluster=<%= link('api').p('cluster.name') %> \
    --user=system:kube-proxy \
    --kubeconfig=$DAT_DIR/proxy.kubeconfig
kubectl config use-context default --kubeconfig=$DAT_DIR/proxy.kubeconfig

echo "[$(date)] $BIN/$$: removing temporary directory $TMP_DIR..."
rm -rf $TMP_DIR

echo "[$(date)] $BIN/$$: complete."
